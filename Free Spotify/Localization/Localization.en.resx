<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddButtonText" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddPlaylistText" xml:space="preserve">
    <value>Add playlist</value>
  </data>
  <data name="AddSongToPlaylistText" xml:space="preserve">
    <value>Add song to playlist</value>
  </data>
  <data name="AddTrackErrorText" xml:space="preserve">
    <value>To add a track to a playlist, click the button next to the playlist.</value>
  </data>
  <data name="AmountTracksDefaultText" xml:space="preserve">
    <value>Number of tracks:</value>
  </data>
  <data name="AppCurrentVersionDefaultText" xml:space="preserve">
    <value>Current Version:</value>
  </data>
  <data name="ArtistDefaultText" xml:space="preserve">
    <value>Artist:</value>
  </data>
  <data name="BallonPlayerCheckBoxToolTip" xml:space="preserve">
    <value>When the window is minimized, a player will pop up when you switch songs, which you can customize however you like.</value>
  </data>
  <data name="BallonPlayerText" xml:space="preserve">
    <value>Pop-up window of MP3Player:</value>
  </data>
  <data name="CancelButtonText" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CheckUpdatesMenuItemHeader" xml:space="preserve">
    <value>Check for updates</value>
  </data>
  <data name="CreatePlaylistText" xml:space="preserve">
    <value>Create a playlist</value>
  </data>
  <data name="DeleteDefaultText" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DiscordRPCAFK" xml:space="preserve">
    <value>Doesn't do anything...</value>
  </data>
  <data name="DiscordRPCListeningTo" xml:space="preserve">
    <value>Listening to music...</value>
  </data>
  <data name="DiscordRPCListenToTrack" xml:space="preserve">
    <value>Listen to the track...</value>
  </data>
  <data name="DiscordRPCPausedTrack" xml:space="preserve">
    <value>Paused the music...</value>
  </data>
  <data name="EnterPlaylistTitleDefaultText" xml:space="preserve">
    <value>Enter the name of the playlist...</value>
  </data>
  <data name="ErrorEnterTheTitleDefaultText" xml:space="preserve">
    <value>Type in the name of the playlist first!</value>
  </data>
  <data name="ErrorJSONCorrupted" xml:space="preserve">
    <value>The settings file has been corrupted, the settings have been reset to default.</value>
  </data>
  <data name="ErrorNoInternetText" xml:space="preserve">
    <value>Looks like you're having internet problems!</value>
  </data>
  <data name="ErrorNoPlaylist" xml:space="preserve">
    <value>Create a playlist to add tracks!</value>
  </data>
  <data name="ErrorNothingFoundText" xml:space="preserve">
    <value>By request:</value>
  </data>
  <data name="ErrorNothingFoundText1" xml:space="preserve">
    <value>nothing was found.</value>
  </data>
  <data name="ErrorText" xml:space="preserve">
    <value>Error!</value>
  </data>
  <data name="FilterForDialogDefaultText" xml:space="preserve">
    <value>JPEG Files (*.jpg;*.jpeg)|*.jpg;*.jpeg|PNG Files (*.png)|*.png|GIF Files (*.gif)|*.gif|All Files (*.*)|*.*</value>
  </data>
  <data name="HoursText" xml:space="preserve">
    <value>h</value>
  </data>
  <data name="ImagePlaylistDefaultText" xml:space="preserve">
    <value>Picture (optional):</value>
  </data>
  <data name="LanguageSettingsDefaultText" xml:space="preserve">
    <value>Language:</value>
  </data>
  <data name="MinutesText" xml:space="preserve">
    <value>min</value>
  </data>
  <data name="MoveDownDefaultText" xml:space="preserve">
    <value>Move down</value>
  </data>
  <data name="MoveUpDefaultText" xml:space="preserve">
    <value>Move up</value>
  </data>
  <data name="NoPlaylistDefaultText" xml:space="preserve">
    <value>Looks like you don't have any playlists created...</value>
  </data>
  <data name="QuestionPlaylist" xml:space="preserve">
    <value>Are you sure you want to delete this playlist?</value>
  </data>
  <data name="QuestionTrack" xml:space="preserve">
    <value>Are you sure you want to delete this track?</value>
  </data>
  <data name="RemoveButtonText" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="RemovePlaylistText" xml:space="preserve">
    <value>Remove playlist</value>
  </data>
  <data name="RenameDefaultText" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="RenamePlaylistText" xml:space="preserve">
    <value>Rename playlist</value>
  </data>
  <data name="SearchBarTextBoxDefaultText" xml:space="preserve">
    <value>What do you want to listen to?</value>
  </data>
  <data name="SearchEngineLabelText" xml:space="preserve">
    <value>Search Engine:</value>
  </data>
  <data name="SearchEngineToolTipText" xml:space="preserve">
    <value>If you can't find a track that is on YouTube you can safely change your search engine and enjoy music from YouTube.</value>
  </data>
  <data name="SecondsText" xml:space="preserve">
    <value>sec</value>
  </data>
  <data name="SelectImageDefaultText" xml:space="preserve">
    <value>Select an image...</value>
  </data>
  <data name="SettingsMenuItemHeader" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SongAuthorDefaultText" xml:space="preserve">
    <value>Unknown Author</value>
  </data>
  <data name="SongTitleDefaultText" xml:space="preserve">
    <value>Unknown Track</value>
  </data>
  <data name="TipStartWrittingText" xml:space="preserve">
    <value>Start writing something to enjoy the music!</value>
  </data>
  <data name="TitlePlaylistDefaultText" xml:space="preserve">
    <value>Title:</value>
  </data>
  <data name="TrackDefaultText" xml:space="preserve">
    <value>Track:</value>
  </data>
  <data name="TrafficDefaultText" xml:space="preserve">
    <value>Traffic Savings:</value>
  </data>
  <data name="TrafficToolTipDefaultText" xml:space="preserve">
    <value>Removes pictures from songs that load during song search.</value>
  </data>
  <data name="YourPlaylistText" xml:space="preserve">
    <value>Your playlists</value>
  </data>
</root>